rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Usuarios: solo lectura/escritura del propio usuario
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null; // Admin puede leer todos
    }
    
    // Reportes: cualquiera puede leer, solo usuarios autenticados pueden crear
    match /reports/{reportId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
        resource.data.userId == request.auth.uid;
    }
    
    // Solicitudes de cruce: control estricto
    match /cross_requests/{requestId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && 
        (resource.data.userId == request.auth.uid || isAdmin());
      allow update: if isAdmin();
    }
    
    // Semáforos: lectura pública, escritura solo admin
    match /traffic_lights/{lightId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Alertas: solo usuario dueño
    match /alerts/{alertId} {
      allow read, write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
    }
    
    // Historial: lectura autenticada
    match /history/{historyId} {
      allow read: if request.auth != null;
    }
    
    function isAdmin() {
      return request.auth != null && 
        exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
  }
}